buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('com.bmuschko:gradle-docker-plugin:3.0.5')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

def buildVersion = '1'

def JAR_VERSION = '0.0.' + buildVersion

jar {
	baseName = 'sip-sample-webhook-java'
	version = JAR_VERSION
}


// sourceCompatibility = 1.8
// targetCompatibility = 1.8

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.springfox:springfox-swagger2:2.6.1')
	compile('io.springfox:springfox-swagger-ui:2.6.1')
    compile(group: 'org.json', name: 'json', version: '20090211')
    compile('commons-codec:commons-codec:1.10')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

test {
	testLogging {
		showStandardStreams = true
	}
}

// configure findbugs static analysis plugin
apply plugin: 'findbugs'

findbugs {
    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}
